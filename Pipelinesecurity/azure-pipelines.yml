# Node.js Express Web App to Linux on Azure
trigger:
- master

variables:
  azureSubscription: 'd3df9ba4-21d2-41ed-8c5b-8f98396e968f'
  webAppName: 'sample202425'
  environmentName: 'sample202425'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: Default

    steps:
    # Install Node.js
    - task: NodeTool@0
      inputs:
        versionSource: 'spec'
        versionSpec: '23.x'
      displayName: 'Install Node.js'

    # Install dependencies
    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: '$(Build.SourcesDirectory)/samplenodejs'
        customCommand: 'install --legacy-peer-deps'
      displayName: 'Install dependencies'

    # Integrate SonarQube - Prepare Analysis
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'SonarQubeServiceEndpoint' # Replace with the name of your SonarQube service connection
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'sample202425' # Unique project key in SonarQube
        cliSources: '$(Build.SourcesDirectory)/samplenodejs'
      displayName: 'Prepare SonarQube Analysis'

    # Build the application
    - task: CmdLine@2
      inputs:
        script: |
          npm run build
        workingDirectory: '$(Build.SourcesDirectory)/samplenodejs'
      displayName: 'Run application'

    # Run Unit Tests
    - task: CmdLine@2
      inputs:
        script: 'npm test -- --reporter mocha-junit-reporter --reporter-options mochaFile=test-results.xml'
        workingDirectory: '$(Build.SourcesDirectory)/samplenodejs/tests'
      displayName: 'Run unit tests'

    # Publish Test Results
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/test-*.xml'

    # Integrate SonarQube - Run Analysis
    - task: SonarQubeAnalyze@5
      displayName: 'Run SonarQube Analysis'

    # Integrate SonarQube - Publish Quality Gate
    - task: SonarQubePublish@5
      inputs:
        pollingTimeoutSec: '300'
      displayName: 'Publish SonarQube Quality Gate Result'

    # Archive Build Artifacts
    - task: ArchiveFiles@2
      inputs:
       rootFolderOrFile: '$(System.DefaultWorkingDirectory)/samplenodejs'
       includeRootFolder: false
       archiveType: 'zip'
       archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
       replaceExistingArchive: true

    # Publish Build Artifacts
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        ArtifactName: 'node24dec'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy to Azure App
    environment: $(environmentName)
    pool:
      name: Default
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: '$(azureSubscription)'
              appType: 'webAppLinux' # Use 'webApp' for Windows-based App Services
              WebAppName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/node24dec/$(Build.BuildId).zip'
              runtimeStack: 'NODE|20LTS'

